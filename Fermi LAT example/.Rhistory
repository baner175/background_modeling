hw <- mean(hw)*10
hw
scores <- c(66.75, 51.6, 18.25, 100)
w <- c(0.2, 0.25, 0.25, 0.3)
weighted.mean(scores, w = w)
hw <- c(10,7.35, 6.45, 4.5, 5.95, 6.85, 2.3, 10, 10)
hw <- mean(hw)*10
hw
w <- c(0.2, 0.25, 0.25, 0.3)
scores <- c(70.44, 51.6, 18.25, 100)
weighted.mean(scores, w = w)
mod3 <- lm(mpg ~ hp + disp, data = mtcars)
visreg::visreg2d(mod3, "hp", "disp", plot.type="persp")
visreg::visreg2d(mod3, "hp", "disp", plot.type="persp")
qnorm(0.02)
pnorm(-2.05, lower.tail = FALSE)
pnorm(-2.05)
0.98*2
?dbinom
r <- 0.8
s_y <- 2.3
s_x <- 20
y_b <- 55; x_b <- 172
b <- r*s_y/s_x
b
r <- 0.9
s_y <- 2.3
s_x <- 20
y_b <- 55; x_b <- 172
b <- r*s_y/s_x
b
b
0.1035*s_x/s_y
a <- y_b - b*x_b
a
r <- 0.9
s_y <- 2.3
s_x <- 20
y_b <- 55; x_b <- 172
b <- r*s_y/s_x
b
(a <- y_b - b*x_b)
37.198 + 0.1035 * 168
-1.4 + 54.586
r <- 0.92
s_y <- 2.3
s_x <- 15
y_b <- 55; x_b <- 168
b <- r*s_y/s_x
b
r <- 0.8
s_y <- 2.3
s_x <- 15
y_b <- 55; x_b <- 168
b <- r*s_y/s_x
b
s_y/s_x
r <- 0.8
s_y <- 2.3
s_x <- 11
y_b <- 55; x_b <- 168
b <- r*s_y/s_x
b
s_y/s_x
r <- 0.92
s_y <- 2.3
s_x <- 23
y_b <- 55; x_b <- 168
b <- r*s_y/s_x
b
r^2
(a <- y_b - b*x_b)
x_new <- 170
a+b*x_new
-1.4 + 55.184
r <- 0.92
s_y <- 2.3
s_x <- 23
y_b <- 50; x_b <- 168
b <- r*s_y/s_x
b
(a <- y_b - b*x_b)
50 - 0.092 * 172
50 - 0.092 * 168
37.198 + 0.1035 * 168
x_new <- 168
a+b*x_new
r <- 0.92
s_y <- 2.3
s_x <- 23
y_b <- 50; x_b <- 168
b <- r*s_y/s_x
b
(a <- y_b - b*x_b)
x_new <- 168
a+b*x_new
a+b*x_new
-1.4 + 50
r <- 0.9
x_bar <- 172; sx <- 20
y_bar <- 55; sy <- 2.3
(b <- r*sy/sx)
(a <- y_bar - b*x_bar)
x_new <- 168
a + b*x_new
(pred <- a + b*x_new)
pred+res
res <- -1.4
pred+res
b
pred <- a + b*310
a + b*310
a + b*400
a + b*300
rm(list - ls())
rm(list = ls())
r <- 0.92
x_bar <- 168; sx <- 23
y_bar <- 55; sy <- 2.3
(b <- r*sy/sx)
(a <- y_bar - b*x_bar)
x_new <- 170
(pred <- a + b*x_new)
res <- -1.4
pred+res
a + b*300
r <- 0.92
x_bar <- 172; sx <- 20
rm(list = ls())
r <- 0.92
x_bar <- 172; sx <- 20
y_bar <- 50; sy <- 2.3
(b <- r*sy/sx)
rm(list = ls())
r <- 0.92
rm(list = ls())
r <- 0.92
x_bar <- 172; sx <- 20
y_bar <- 50; sy <- 2.3
(b <- r*sy/sx)
b*sx/sy
(a <- y_bar - b*x_bar)
x_new <- 168
(pred <- a + b*x_new)
31.8024 + 0.1058*168
x_new <- 168
(pred <- a + b*x_new)
res <- -1.4
pred+res
a + b*300
a
b
qt(0.37, df = 48, lower = FALSE)*2
qt(-0.37, df = 48, lower = TRUE)*2
pt(-0.37, df = 48, lower = TRUE)*2
pt(0.37, df = 48, lower = FALSE)*2
1*pt(0.37, df = 48, lower = FALSE)
2*pt(0.37, df = 48, lower = FALSE)
qt(0.025, df = 48, lower = FALSE)
-1.85 + c(-1,1)*2.011*5
10+1.85*5
0.35^2
pt(0.37, df = 48, lower = FALSE)
pt(0.37, df = 50, lower = FALSE)
pnorm(0.37)
pnorm(-0.37)
pt(0.6, df = 78, lower = FALSE)
2*pt(0.6, df = 78, lower = FALSE)
qt(0.025, df = 48, lower = FALSE)
qt(0.025, df = 50, lower = FALSE)
qt(0.025, df = 48, lower = FALSE)
qt(0.05, df = 78, lower = FALSE)
qt(0.05, df = 80, lower = FALSE)
qt(0.1, df = 78, lower = FALSE)
-1.8 +c(-1,1)* 1.66*3
0.25^2
2*pt(0.4, df = 28, lower = FALSE)
qt(0.1, df = 28, lower = FALSE)
-1.2 + c(-1,1)* 1.31*3
pt(0.4, df = 28, lower = FALSE)
pt(0.4, df = 30, lower = FALSE)
pt(0.4, df = 32, lower = FALSE)
pt(1.2, df = 28, lower = FALSE)
pt(0.4, df = 28, lower = FALSE)
qt(0.01, df = 28, lower = FALSE)
qt(0.2, df = 78, lower = FALSE)
qt(0.2, df = 28, lower = FALSE)
qt(0.1, df = 28, lower = FALSE)
qt(0.2, df = 28, lower = FALSE)
iris
attach(iris)
model <- lm(Sepal.Width ~ Sepal.length)
iris
attach(iris)
Sepal.Length
model <- lm(Sepal.Width ~ Sepal.length)
model <- lm(Sepal.Width ~ Sepal.length)
model <- lm(Sepal.Width ~ Sepal.Length)
summary(model)
dim(iris)
cor(Sepal.Width, Sepal.Length)^2
cor(Sepal.Width, Sepal.Length)
sqrt(0.01382)
attach(iris)
model <- lm(Sepal.Width ~ Sepal.Length)
summary(model)
attach(iris)
model <- lm(Sepal.Width ~ Sepal.Length)
summary(model)
sqrt(0.01382)
names(mtcars)
attach(mtcars)
?mtcars
attach(mtcars)
model <- lm(mpg ~ hp)
summary(model)
qt(0.025, df = 30, lower = FALSE)
qt(0.05, df = 30, lower = FALSE)
sqrt(0.6024)
(-0.06823 + 0.7)/0.01012
b + c(-1,1)* 2.042 * 0.01012
b
-0.06823 + c(-1,1)* 2.042 * 0.01012
(-0.06823 + 0.07)/0.01012
(-0.06823 + 0.08)/0.01012
qt(0.05, df = 30, lower = FALSE)
qt(0.1, df = 30, lower = FALSE)
-0.06823 + c(-1,1) * 1.697 *  0.01012
(-0.06823 + 0.09)/0.01012
qt(0.1, df = 30, lower = FALSE)
-0.06823 + c(-1,1) * 1.31 * 0.01012
qt(0.2, df = 30, lower = FALSE)
hw_score
hw_score <- mean(hw)*10
hw <- c(10, 7.35, 6.45, 4.5, 5.95, 6.85, 2.3, 10, 10)
hw <- hw[-which.min(hw)]
hw_score <- mean(hw)*10
hw_score
length(hw)
hw <- c(10, 7.35, 6.45, 4.5, 5.95, 6.85, 2.3, 10, 10)
hw <- hw[-which.min(hw)]
hw_score <- sum(hw)*10/8
hw_score
hw <- c(10, 7.35, 6.45, 4.5, 5.95, 6.85, 2.3, 10, 10)
hw <- hw[-which.min(hw)]
hw_score <- sum(hw)*10/8
scores <- c(hw_score, 51.6, 39.15)
w <- c(0.2, 0.25, 0.25)
weighted.mean(scores, w)
hw <- c(10, 7.35, 6.45, 4.5, 5.95, 6.85, 2.3, 10, 10)
hw <- hw[-which.min(hw)]
hw_score <- sum(hw)*10/8
scores <- c(hw_score, 51.6, 39.15, 100)
w <- c(0.2, 0.25, 0.25, 0.3)
weighted.mean(scores, w)
hw <- c(10, 7.35, 6.45, 4.5, 5.95, 6.85, 2.3)
hw <- hw[-which.min(hw)]
hw_score <- mean(hw)*10
scores <- c(hw_score, 51.6, 39.15)
w <- c(0.2, 0.25, 0.25)
weighted.mean(scores, w)
hw <- c(10, 7.35, 6.45, 4.5, 5.95, 6.85, 2.3, 10, 10)
hw <- hw[-which.min(hw)]
hw_score <- mean(hw)*10
scores <- c(hw_score, 51.6, 39.15, 100)
w <- c(0.2, 0.25, 0.25, 0.3)
weighted.mean(scores, w)
hw <- c(10, 7.35, 6.45, 4.5, 5.95, 6.85, 2.3)
hw <- hw[-which.min(hw)]
hw_score <- mean(hw)*10
scores <- c(hw_score, 51.6, 39.15)
w <- c(0.2, 0.25, 0.25)
weighted.mean(scores, w)
XTX_inv <- rbind(
c(151401.8, 2.6,100.5, -28082.9)/1e4,
c(2.6, 1.0, 0.0, 0.4)/1e4,
c(100.5, 0.0, 8.1, 5.2)/1e4,
c(-28082.9, 0.4, 5.2, 6038.2)/1e4
)
t(x)%*%XTX_inv%*%x
x <- c(1, 914, 65, 6)
t(x)%*%XTX_inv%*%x
XTX_inv <- rbind(
c(151401.8, 2.6,100.5, -28082.9)/1e4,
c(2.6, 1.0, 0.0, 0.4)/1e4,
c(100.5, 0.0, 8.1, 5.2)/1e4,
c(-28082.9, 0.4, 5.2, 6038.2)/1e4
)
x <- c(1, 914, 65, 6)
t(x)%*%XTX_inv%*%x
sqrt(t(x)%*%XTX_inv%*%x)
b <- c(38.83, -0.0092, -0.92, 11.56)
x*b
sum(x*b)
x <- 1996:2003
y <- c(18.5, 22.6, 27.2,
31.2, 33.0, 44.9, 49.4, 35.0)
model <- lm(y ~ 1 + x + I(x)^2)
summary(model)
model <- lm(y ~ 1 + x + x^2)
summary(model)
model <- lm(y ~ 1 + I(x) + I(x)^2)
summary(model)
model <- lm(y ~ poly(x,2))
summary(model)
model <- lm(y ~ 1 + x + I(x^2))
summary(model)
summary(model)
mod <- lm(y~ploy(x,2))
mod <- lm(y~poly(x,2))
summary(mod)
x <- 1996:2003
y <- c(18.5, 22.6, 27.2,
31.2, 33.0, 44.9, 49.4, 35.0)
model <- lm(y ~ poly(x, 2))
summary(model)
X <- model.matrix(model)
x <- c(1,9,81)
XTX_inv <- solve(t(X)%*%X)
sqrt(t(x)%*%XTX_inv%*%x)
b <- model$coefficients
b
sum(x*b)
qt(0.01, df = 5, lower = F)
winning_perc <- c(0.556, 0.519, 0.525, 0.444, 0.522, 0.438, 0.451, 0.506, 0.512,
0.543, 0.549, 0.420, 0.546, 0.438, 0.481, 0.451)
runs_scored <- c(712, 810, 752, 783, 860, 790, 723, 735, 801, 804, 892, 724, 741,
683, 725, 673)
home_runs <- c(171, 176, 151, 204, 171, 201, 167, 129, 231, 177, 213, 148, 171, 131, 141, 123)
batt_avg <- c(0.250 ,0.275, 0.271, 0.267, 0.280, 0.267, 0.260, 0.275, 0.262, 0.275, 0.274, 0.263,
0.251, 0.254, 0.274, 0.256)
dat <- data.frame(winning_perc, runs_scored, home_runs, batt_avg)
dat
View(dat)
x <- 0:4
p <- c(0.735, 0.159, 0.051, 0.008, 0.029)
sum(x*p)
sqrt(sum(x*p*x) - sum(x*p)^2)
sum(p[3:5])
p <- 184/203
(p-0.83)/sqrt(p*(1-p)/203)
(p-0.83)/sqrt(0.83*(1-0.83)/203)
(p-0.82)/sqrt(0.82*(1-0.82)/203)
p
(p-0.82)/sqrt(0.82*0.18/203)
p <- 162/n
n <- 203
p <- 162/n
p0 <- 0.84
(p-p0)/sqrt(p0*(1-p0)/n)
162/203
p <- 184/n
p0 <- 0.83
(p-p0)/sqrt(p0*(1-p0)/n)
p
a <- c(29, 121)
b <- rep(50,3)
outer(a,b)
outer(a,b)/150
a <- c(98.92,110)
b <- c(259, 41, 300)
outer(a,b)/150
outer(a,b)/300
a <- c(98,92,110)
outer(a,b)/300
b <- c(259, 41)
outer(a,b)/300
a <- c(155,145); b <- c(70, 180, 50)
outer(a,b)/150
outer(a,b)/300
yb <- 55; sy <- 2.3; xb <- 168; sx <- 23
(r <- b*sx/sy)
yb <- 55; sy <- 2.3; xb <- 168; sx <- 23
b <- 0.092
(r <- b*sx/sy)
r^2
(a <- yb- b*xb)
(pred <- a+b*x_new)
x_new <- 170
(pred <- a+b*x_new)
pred-1.4
x_out <- 300
a+b*x_out
a
b
yb <- 50; sy <- 2.3; xb <- 172; sx <- 20
yb <- 50; sy <- 2.3; xb <- 172; sx <- 20
b <- 0.1058
(r <- b*sx/sy)
r^2
(a <- yb- b*xb)
x_new <- 168
(pred <- a+b*x_new)
pred-1.4
yb <- 55; sy <- 2.3; xb <- 172; sx <- 20
b <- 0.1035
(r <- b*sx/sy)
r^2
(a <- yb- b*xb)
x_new <- 168
(pred <- a+b*x_new)
pred-1.4
x_out <- 300
a+b*x_out
setwd("C:/Users/Aritra/OneDrive/Desktop/Research/Work with Sara/R-Codes/Fermi LAT example")
setwd("C:/Users/Aritra/OneDrive/Desktop/Research/Work with Sara/R-Codes/Fermi LAT example")
rm(list = ls())
library(ggplot2)
library(kdensity)
library(truncdist)
library(VGAM)
library(latex2exp)
real_l <- 1; real_u <- 35
l <- log(real_l); u <- log(real_u)
mean_sig <- 3.5; sd_sig <- sqrt(0.01*3.5^2)
rate_gb <- 1.2
eps <- 1e-3
dat <- read.table('Data_ex1.txt', header = TRUE)
obs <- log(dat$x)
n <- length(obs)
kde <- kdensity(obs)
# SIGNAL DENSITY:
fs <- function(x, mean = mean_sig, sd = sd_sig)
{
return(dtrunc(exp(x), spec = 'norm', a = real_l, b = real_u,
mean = mean, sd = sd)*exp(x))
}
# SIGNAL CDF:
Fs <- function(x, mean = mean_sig, sd = sd_sig)
{
return(ptrunc(exp(x), spec = 'norm', a = real_l, b = real_u,
mean = mean, sd = sd))
}
# Figuring out (mu_s -d, mu_s + d) that covers an area of 1-eps:
find_d <- function(d)
{
pl <- Fs(log(mean_sig)-d, mean = mean_sig, sd = sd_sig)
pu <- Fs(log(mean_sig)+d, mean = mean_sig, sd = sd_sig)
return(pu-pl-1+eps)
}
sol <- uniroot(find_d, lower = 0, upper = min(log(mean_sig) - l,u - log(mean_sig)))
r <- sol$root
M_lower <- log(mean_sig) - r
M_upper <- log(mean_sig) + r
round(integrate(fs, M_lower, M_upper)$value,5) == 1-eps
# PROPOSAL BACKGROUND DENSITY:
mean1_in_gb <- (exp(M_lower) + mean_sig)/2; sd_in_gb <- 2*sd_sig
mean2_in_gb <- (exp(M_upper) + mean_sig)/2;
gb_test <- function(x, fs_prop = 0)
{
fs_val1 <- fs(x, mean = mean1_in_gb, sd = sd_in_gb)
fs_val2 <- fs(x, mean = mean2_in_gb, sd = sd_in_gb)
qb_val <- dtrunc(x, spec = 'exp', rate = rate_gb, a = l, b = u)
return(fs_prop*fs_val1 + fs_prop*fs_val2 + (1-2*fs_prop)*qb_val)
}
# Area under gb
integrate(gb_test,l,u)
ggplot(data=data.frame(x = c(l,u)), mapping = aes(x = x)) +
ylim(0, 1.8) +
stat_function(fun = kde, col = 'orange') +
stat_function(fun = fs, col = 'blue') +
stat_function(fun = function(t) gb_test(t), col = 'red') +
geom_vline(xintercept = c(M_lower, M_upper))
mycols <- c('red', 'blue', 'green', 'brown', 'orange')
palette(mycols)
my_lty = c(1,2,4,5,3)
fs_prop_seq <- seq(0, 0.04, 0.01)
curve(kde, l, u, xlab = 'log(y)',
ylab = 'Density', lwd = 2.2)
for(j in 1:length(fs_prop_seq))
{temp_fun <- function(t) gb_test(t, fs_prop = fs_prop_seq[j])
curve(temp_fun, l, u, add = TRUE, col = j, lty = my_lty[j], lwd = 2.2)
}
legend(x = 2, y = 0.9, col = 1:length(fs_prop_seq),
lty = my_lty, bty = 'n', lwd =2.2,
legend=TeX(sprintf(r'($\lambda = %f$)', fs_prop_seq)),
cex = 1.5)
# Probably best to use 0.02
gb <- function(t) gb_test(t, fs_prop = 0.02)
My_Theme = theme(
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 14),
axis.title.y = element_text(size = 16),
axis.text.y = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data=data.frame(x = c(l,u)), mapping = aes(x = x)) +
ylim(0, 1.8) +
stat_function(fun = kde, col = 'black', lwd = 1.5) +
# stat_function(fun = fs, col = 'blue') +
stat_function(fun = gb, col = 'orange', lwd = 1.5) +
geom_vline(xintercept = c(M_lower, M_upper), alpha = 0.5,
lwd = 1.5) +
xlab('x') + ylab('Density') +
annotate('text', x = c(M_lower, M_upper),
y = c(0,0),
label = c(TeX('$\\mu-d_\\epsilon$'), TeX('$\\mu_s+d_\\epsilon$')),
size = 10) +
theme_bw() + My_Theme
ggplot(data=data.frame(x = c(l,u)), mapping = aes(x = x)) +
ylim(0, 1.8) +
stat_function(fun = kde, col = 'black', lwd = 1.5) +
# stat_function(fun = fs, col = 'blue') +
stat_function(fun = gb, col = 'orange', lwd = 1.5) +
geom_vline(xintercept = c(M_lower, M_upper), alpha = 0.5,
lwd = 1.5) +
xlab('x') + ylab('Density') +
annotate('text', x = c(M_lower, M_upper),
y = c(0,0),
label = c(TeX('$\\mu_s-d_\\epsilon$'), TeX('$\\mu_s+d_\\epsilon$')),
size = 10) +
theme_bw() + My_Theme
